#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20171007

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=crda
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=https://www.kernel.org/pub/software/network/crda/
	VERSION=$(curl -s $WEB|grep .tar.xz|tail -1|cut -d- -f2|cut -d t -f1|sed "s/.$//g")
	DOWNLOAD=${WEB}${PRGNAM}-${VERSION}.tar.xz
}

# Si el paquete no existe se descargara de internet
F_download(){
	if [ ! -f $PRGNAM-$VERSION.tar.xz ]; then
	echo 
	echo "$CYAN"Descargando sources de $PRGNAM-$VERSION"$CIERRE"
	sleep 1
	wget -c $DOWNLOAD
	fi
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo
echo "$VERDE"Este programa requiere tener wireless-regdb ...procediendo."$CIERRE"
echo
	REGDBNAM=wireless-regdb
	REGDBWEB=https://www.kernel.org/pub/software/network/$REGDBNAM/
	REGDBVERSION=$(curl -s $REGDBWEB|grep .tar.xz|tail -1|cut -d- -f3|cut -d t -f1|sed "s/.$//g")
	REGDBDOWNLOAD=${REGDBWEB}${REGDBNAM}-${REGDBVERSION}.tar.xz
	
        if [ ! -f $REGDBNAM-$REGDBVERSION.tar.xz ]; then
	echo 
	echo "$CYAN"Descargando sources de $REGDBNAM-$REGDBVERSION"$CIERRE"
	sleep 1
	wget -c $REGDBDOWNLOAD
	fi

tar xvf $REGDBNAM-$REGDBVERSION.tar.xz || exit 1
cd $REGDBNAM-$REGDBVERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

 
# Aqui voy a "hackear" el plan de canales para tener siempre canales 1-13
# Independientemente del plan de canal que seleccione la tarjeta
# Por ejemplo si elije US , solo tendriamos canales 1-11 y no nos interesa
# Pero si el txpower de dicha config que es de 30db si la tarjeta lo soporta

sed -i 's/2402/2400/g' db.txt
sed -i 's/2472/2483/g' db.txt

make

mkdir -p /usr/lib/crda
cat regulatory.bin > /usr/lib/crda/regulatory.bin

mkdir -p $PKG/usr/lib/crda
cat regulatory.bin > $PKG/usr/lib/crda/regulatory.bin
sleep 1

echo
echo "$VERDE"Ahora ya compilamos crda..."$CIERRE"
echo
sleep 1
echo "$VERDE"Descomprimiendo ..."$CIERRE"
sleep 1
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $PRGNAM-$VERSION.tar.xz || exit 1
cd $PRGNAM-$VERSION || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1

# Antes de compilar hay que mover unos ficheros ,para que la regdb sea validada
cp -rf $TMP/$REGDBNAM-$REGDBVERSION/*pem $TMP/$PRGNAM-$VERSION/pubkeys/

sed -i -e "s,-Werror ,,g" -e "s,fpic,fPIC,g" Makefile

make ; make clean ; make

make \
  CFLAGS="$SLKCFLAGS" \
  MANDIR=/usr/man \
  LIBDIR=/usr/lib${LIBDIRSUFFIX} \
  || exit 1
make install \
  CFLAGS="$SLKCFLAGS" \
  MANDIR=/usr/man \
  LIBDIR=/usr/lib${LIBDIRSUFFIX} \
  DESTDIR=$PKG \
  || exit 1

}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Si no existe el fichero se descargara
F_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales