#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20180508

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=wireshark
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://www.wireshark.org/download/src/
	VERSION=$(curl -s https://www.wireshark.org|grep -i stable|head -1|rev|cut -d ' ' -f1|rev|sed 's/.$//g')
	EXTENSION=tar.xz
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	CD=$PRGNAM-$VERSION
	DOWNLOAD=$WEB/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="c-ares
GeoIP
libdbus-c++
libiec61883
libxml++
libconfig
libffado
celt
jack-audio-connection-kit
portaudio
krb5
libsmi
jansson
nghttp2
spandsp
lz4"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){

# Configuramos
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1

# Esto evita problemas en sistemas multilib
sed -i "s|/lib)|/lib$LIBDIRSUFFIX)|g" configure.ac

autoreconf -f -i

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --with-ssl=/usr/lib${LIBDIRSUFFIX} \
  --enable-packet-editor \
  --enable-setuid-install \
  --with-qt=no \
  --with-gtk=2 \
  --with-pcap \
  --with-zlib \
  --with-portaudio \
  --with-ssl \
  --with-krb5 \
  --with-c-ares \
  --with-geoip \
  --without-lua \
  --build=$ARCH-slackware-linux

# Compilamos
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1  
make || exit 1
make install DESTDIR=$PKG || exit 1

# Instalamos cabeceras
mkdir -p $PKG/usr/include/$PRGNAM/{epan/{crypt,dfilter,dissectors,ftypes,wmem},wiretap,wsutil}
install -m644 config.h ws_diag_control.h ws_symbol_export.h $PKG/usr/include/$PRGNAM
  for d in epan epan/crypt epan/dfilter epan/dissectors epan/ftypes epan/wmem wiretap wsutil; do
    install -m644 $d/*.h $PKG/usr/include/$PRGNAM/$d
  done

# Instalamos entrada desktop
mkdir -p $PKG/usr/share/applications/wifislax/Redes
mv -f $PRGNAM.desktop $PKG/usr/share/applications/wifislax/Redes/$PRGNAM.desktop
rm -rf $PKG/usr/share/applications/*.desktop

# Corregimos nombre de ejecutable
mv -f $PKG/usr/bin/wireshark-gtk $PKG/usr/bin/wireshark

# Corregimos entrada de menu
sed 's/Network;Monitor;Qt;/Redes;/'g -i $PKG/usr/share/applications/wifislax/Redes/$PRGNAM.desktop

# Eliminamos los ficheros .la
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Creamos una config basica
CONFIG=$PKG/$HOME/.$PRGNAM
mkdir -p $CONFIG

echo "# Main window maximized.
# TRUE or FALSE (case-insensitive).
gui.geometry_main_maximized: TRUE
# Warn if running with elevated permissions (e.g. as root).
# TRUE or FALSE (case-insensitive).
privs.warn_if_elevated: FALSE" > $CONFIG/recent
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales